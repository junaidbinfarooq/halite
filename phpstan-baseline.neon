parameters:
	ignoreErrors:
		-
			message: '#^Call to function is_string\(\) with non\-empty\-string will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 4
			path: src/File.php

		-
			message: '#^Call to function is_string\(\) with string will always evaluate to true\.$#'
			identifier: function.alreadyNarrowedType
			count: 2
			path: src/File.php

		-
			message: '#^Comparison operation "\<" between 10 and 10 is always false\.$#'
			identifier: smaller.alwaysFalse
			count: 1
			path: src/Halite.php

		-
			message: '#^Property ParagonIE\\Halite\\Key\:\:\$keyMaterial \(string\) does not accept null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Key.php

		-
			message: '#^Comparison operation "\<\=" between int\<1, max\> and 0 is always false\.$#'
			identifier: smallerOrEqual.alwaysFalse
			count: 1
			path: src/Stream/MutableFile.php

		-
			message: '#^Comparison operation "\<\=" between int\<1, max\> and 0 is always false\.$#'
			identifier: smallerOrEqual.alwaysFalse
			count: 1
			path: src/Stream/ReadOnlyFile.php

		-
			message: '#^Offset 1\|int\<3, max\> on array\<int, string\> on left side of \?\? always exists and is not nullable\.$#'
			identifier: nullCoalesce.offset
			count: 1
			path: src/Structure/MerkleTree.php

		-
			message: '#^Parameter &\$var @param\-out type of method ParagonIE\\Halite\\Util\:\:memzero\(\) expects null, int given\.$#'
			identifier: paramOut.type
			count: 1
			path: src/Util.php

		-
			message: '#^Comparison operation "\<" between 10 and 7 is always false\.$#'
			identifier: smaller.alwaysFalse
			count: 2
			path: test/unit/AsymmetricTest.php

		-
			message: '#^Comparison operation "\<" between 3 and 5 is always true\.$#'
			identifier: smaller.alwaysTrue
			count: 2
			path: test/unit/AsymmetricTest.php

		-
			message: '#^Loose comparison using \=\= between 10 and 7 will always evaluate to false\.$#'
			identifier: equal.alwaysFalse
			count: 2
			path: test/unit/AsymmetricTest.php

		-
			message: '#^Result of && is always false\.$#'
			identifier: booleanAnd.alwaysFalse
			count: 2
			path: test/unit/AsymmetricTest.php

		-
			message: '#^Result of \|\| is always false\.$#'
			identifier: booleanOr.alwaysFalse
			count: 2
			path: test/unit/AsymmetricTest.php

		-
			message: '#^Access to an undefined property object\{abc\: int\}&ParagonIE\\Halite\\Config\:\:\$missing\.$#'
			identifier: property.notFound
			count: 1
			path: test/unit/ConfigTest.php

		-
			message: '#^Dead catch \- ParagonIE\\Halite\\Alerts\\ConfigDirectiveNotFound is never thrown in the try block\.$#'
			identifier: catch.neverThrown
			count: 1
			path: test/unit/ConfigTest.php

		-
			message: '#^Parameter \#1 \$key of static method ParagonIE\\Halite\\KeyFactory\:\:export\(\) expects ParagonIE\\Halite\\Key\|ParagonIE\\Halite\\KeyPair, stdClass given\.$#'
			identifier: argument.type
			count: 1
			path: test/unit/KeyTest.php

		-
			message: '#^Call to method PHPUnit\\Framework\\Assert\:\:assertIsString\(\) with string will always evaluate to true\.$#'
			identifier: method.alreadyNarrowedType
			count: 3
			path: test/unit/PasswordTest.php

		-
			message: '#^Parameter \#1 \$file of class ParagonIE\\Halite\\Stream\\MutableFile constructor expects resource\|string, int given\.$#'
			identifier: argument.type
			count: 1
			path: test/unit/StreamTest.php

		-
			message: '#^Parameter \#1 \$file of class ParagonIE\\Halite\\Stream\\ReadOnlyFile constructor expects resource\|string, int given\.$#'
			identifier: argument.type
			count: 1
			path: test/unit/StreamTest.php
